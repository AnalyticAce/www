export const projects = [
  {
    title: "SupportAgent - Personalized AI Agent",
    description: "Intelligent AI-powered SaaS support agent built with OpenAI GPT-4 and Pydantic-AI. Handles customer queries, manages subscriptions, checks account status, and escalates issues using advanced RAG.",
    link: "https://github.com/AnalyticAce/SupportAgent",
    github: "https://github.com/AnalyticAce/SupportAgent",
    technologies: ["Python", "OpenAI GPT-4", "Pydantic-AI", "RAG", "AI Engineering", "Prompt Engineering"],
  },
  {
    title: "MyResumo - AI Powered Job Search Tools",
    description: "AI-backed resume generator that tailors resumes based on job descriptions. Leverages advanced AI to create ATS-friendly resumes optimized for specific roles.",
    link: "https://github.com/AnalyticAce/MyResumo",
    github: "https://github.com/AnalyticAce/MyResumo",
    technologies: ["Python", "FastAPI", "Natural Language Processing", "Prompt Engineering", "AI"],
  },
  {
    title: "Smart Upwork Proposal - AI Browser Extension",
    description: "Browser extension that scrapes Upwork job descriptions and uses LLMs to generate tailored proposals. Combines automation with prompt engineering to streamline freelancing workflows.",
    link: "https://github.com/AnalyticAce/UpworkProposalAI",
    github: "https://github.com/AnalyticAce/UpworkProposalAI",
    technologies: ["JavaScript", "Browser Extension", "LLM", "Web Scraping", "Prompt Engineering", "Automation"],
  },
  {
    title: "Custom MCP Servers - Dev's Kit",
    description: "Collection of Model Context Protocol servers providing various integrations for MCP-compatible clients like Claude Desktop and VS Code. Comprehensive development toolkit for AI applications.",
    link: "https://github.com/AnalyticAce/MyDevMCP",
    github: "https://github.com/AnalyticAce/MyDevMCP",
    technologies: ["Python", "MCP", "AI Integration", "Claude Desktop", "VS Code", "API Development"],
  },
  {
    title: "VSCode Augmented Coding Template",
    description: "Comprehensive template for AI-assisted coding environment using GitHub Copilot, MCP integration, and AI agent functions. Maximizes developer productivity through intelligent automation and optimized VS Code configurations.",
    link: "https://github.com/AnalyticAce/VSCodeAugmentedCoding",
    github: "https://github.com/AnalyticAce/VSCodeAugmentedCoding",
    technologies: ["VS Code", "GitHub Copilot", "MCP", "AI Automation", "Developer Tools", "Productivity"],
  },
  {
    title: "High-Frequency Trading Bot",
    description: "Advanced trading bot processing thousands of orders per second using dynamic algorithms. Features market adaptation, overfitting prevention, and profit maximization strategies.",
    link: "https://github.com/AnalyticAce/Trade",
    github: "https://github.com/AnalyticAce/Trade",
    technologies: ["Python", "Algorithmic Trading", "High-Frequency Trading", "Market Analysis", "Risk Management", "Financial Engineering"],
  },
  {
    title: "Binance MCP Server",
    description: "Powerful Model Context Protocol server enabling AI agents to interact with Binance cryptocurrency exchange. Provides comprehensive trading tools, market data access, and account management capabilities.",
    link: "https://github.com/AnalyticAce/BinanceMCPServer",
    github: "https://github.com/AnalyticAce/BinanceMCPServer",
    technologies: ["Python", "MCP", "Cryptocurrency", "Trading APIs", "Binance API", "AI Integration"],
  },
  {
    title: "FastAPI Ganache App",
    description: "FastAPI application connecting to local Ganache Ethereum blockchain. Provides wallet generation, balance retrieval, and transaction sending functionalities for Web3 development.",
    link: "https://github.com/AnalyticAce/FastAPIGanacheApp",
    github: "https://github.com/AnalyticAce/FastAPIGanacheApp",
    technologies: ["Python", "FastAPI", "Ethereum", "Ganache", "Web3", "Blockchain"],
  },
  {
    title: "Magic Trader - Binary Options Signal Bot",
    description: "Automated trading bot that monitors Telegram channels for trading signals and executes trades on Quotex platform. Features signal parsing and risk management rules for binary options trading.",
    link: "https://github.com/AnalyticAce/magic-trader",
    github: "https://github.com/AnalyticAce/magic-trader",
    technologies: ["Python", "Telegram API", "Trading Automation", "Binary Options", "Risk Management", "Web Scraping"],
  },
  {
    title: "AREA - Action Reaction Automation Platform",
    description: "Powerful automation platform enabling custom workflows by connecting different services. Led 6-member team to build IFTTT-style system across mobile, web, and admin platforms.",
    link: "https://github.com/AnalyticAce/AREA",
    github: "https://github.com/AnalyticAce/AREA",
    technologies: ["Python", "Backend Development", "Team Management", "Project Management", "Automation", "API Integration"],
  },
  {
    title: "FileShareAPI",
    description: "Simple file sharing API built with FastAPI. Provides endpoints for file upload, download, and metadata management with JSON-based storage system.",
    link: "https://github.com/AnalyticAce/FileShareAPI",
    github: "https://github.com/AnalyticAce/FileShareAPI",
    technologies: ["Python", "FastAPI", "File Management", "REST API", "JSON", "Web Development"],
  },
  {
    title: "Python Package Template",
    description: "Comprehensive boilerplate for creating Python packages with modern tooling and best practices. Includes testing, documentation, and deployment configurations.",
    link: "https://github.com/AnalyticAce/PythonPackage",
    github: "https://github.com/AnalyticAce/PythonPackage",
    technologies: ["Python", "Package Development", "Testing", "Documentation", "CI/CD", "Best Practices"],
  },
  {
    title: "TidyFS - File Organization Tool",
    description: "Simple and efficient command-line tool to organize files by sorting them into folders based on file extensions. Streamlines file management workflows.",
    link: "https://github.com/AnalyticAce/TidyFS",
    github: "https://github.com/AnalyticAce/TidyFS",
    technologies: ["Python", "CLI", "File Management", "Automation", "System Tools", "Organization"],
  },
  {
    title: "CatReadme - Markdown Viewer",
    description: "Command-line tool to display markdown files with rich formatting. Enhances terminal-based documentation viewing experience.",
    link: "https://github.com/AnalyticAce/CatReadme",
    github: "https://github.com/AnalyticAce/CatReadme",
    technologies: ["Python", "CLI", "Markdown", "Rich Formatting", "Terminal", "Developer Tools"],
  },
  {
    title: "MyTorch - Neural Network Framework",
    description: "Neural network-based chessboard analyzer built from scratch without deep learning libraries. Generates and trains networks on chess positions using FEN notation, achieving 90% accuracy for binary classification.",
    link: "https://github.com/AnalyticAce/mytorch",
    github: "https://github.com/AnalyticAce/mytorch",
    technologies: ["Python", "Neural Networks", "Machine Learning", "Chess AI", "FEN", "Supervised Learning"],
  },
  {
    title: "Gomoku AI Bot",
    description: "High-performance Gomoku AI using Min-Max algorithm with Alpha-Beta pruning. Designed for GomokuCup competition with strict constraints: 5-second moves, 70MB memory limit.",
    link: "https://github.com/AnalyticAce/gomoku-ai",
    github: "https://github.com/AnalyticAce/gomoku-ai",
    technologies: ["Python", "AI Algorithms", "Min-Max", "Alpha-Beta Pruning", "Game AI", "Optimization"],
  },
];
